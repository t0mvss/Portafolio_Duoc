/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Capa_Vista;

import Capa_Conexion.Conexion;
import Capa_Modelo.Tipo_Medida;
import Capa_Controlador.ControladorCmbTipoMedida;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author boris
 */
public class Vista_Mantener_Inventario extends javax.swing.JFrame {

    /**
     * Creates new form Vista_Mantener_Inventario
     */
    ControladorCmbTipoMedida controlador = new ControladorCmbTipoMedida();
    ArrayList ListaTipoMed;
    Conexion cn = new Conexion();
    Connection cc = cn.conexion;

    public Vista_Mantener_Inventario() {
        initComponents();
        mostrarTabla();
        LlenarCMBTipoMed();
        setTitle("Mantenedor Insumos");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAtras = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInsumos = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        cmbMedida = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAtras.setText("Atr√°s");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre");

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        tblInsumos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane1.setViewportView(tblInsumos);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        jLabel2.setText("Medida");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAtras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbMedida, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnAgregar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 96, Short.MAX_VALUE)
                        .addComponent(btnModificar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    public void mostrarTabla(){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("NOMBRE");
        modelo.addColumn("CANTIDAD");
        modelo.addColumn("MEDIDA");
        tblInsumos.setModel(modelo);

        String sql = "";
        sql = "select i.id_insumos, i.nombre, s.cantidad, tp.descripcion from insumos i inner join stock_insumos s on i.id_insumos = s.id_insumos inner join tipo_medida tp on tp.id_tipo_medida = i.id_tipo_medida order by i.id_insumos asc;";
        String [] dato = new String[4];
        try{
            Statement st = cc.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()){
                dato[0] = rs.getString(1);
                dato[1] = rs.getString(2);
                dato[2] = rs.getString(3);
                dato[3] = rs.getString(4);
                modelo.addRow(dato);
            }
            tblInsumos.setModel(modelo);
        }
        catch(SQLException e){
        }

    }

    public void LlenarCMBTipoMed(){
        try {
            cmbMedida.removeAllItems();
            ListaTipoMed = controlador.getListaTipoMedida();
            Iterator iter = ListaTipoMed.iterator();
            while (iter.hasNext()){
                Tipo_Medida tipoMed = (Tipo_Medida) iter.next();
                cmbMedida.addItem(tipoMed.toString());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,"Hubo un error","Aviso",JOptionPane.WARNING_MESSAGE);
        }
        
    }

    public int existeInsumo(String nombre){
        PreparedStatement ps = null;
        ResultSet rs = null;
        String sql = "SELECT COUNT(id_insumos) FROM insumos WHERE UPPER(nombre) = UPPER(?)";
        try{
            ps = cc.prepareStatement(sql);
            ps.setString(1, nombre);
            rs = ps.executeQuery();
            if(rs.next()){
                return rs.getInt(1);
            }
            return 1;
        }
        catch (SQLException ex){
            return 1;
        }
    }

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        Vista_Bodega visBod = new Vista_Bodega();
        visBod.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String nombre;
        int existe;
        String tipomed;
        int idtipomed = 0;
        nombre = txtNombre.getText();
        existe = existeInsumo(nombre);
        PreparedStatement ps = null;
        ResultSet rs = null;
        String sql = "";
        if ((nombre.equals(""))){
            JOptionPane.showMessageDialog(this, "Debe ingresar un nombre","Precauci√≥n", JOptionPane.WARNING_MESSAGE);
        }
        else{
            int i = JOptionPane.showConfirmDialog(this,"¬øEst√° seguro de que desea agregar este Insumo?","Mensajes", JOptionPane.ERROR_MESSAGE);
            if (i == 0){
                if (existe == 0){
                    try {
                        tipomed = cmbMedida.getSelectedItem().toString();
                        sql = "select id_tipo_medida from tipo_medida Where descripcion = ?;";
                        ps = cc.prepareStatement(sql);
                        ps.setString(1, tipomed);
                        rs = ps.executeQuery();
                       if (rs.next()){
                            idtipomed = Integer.parseInt(rs.getString("id_tipo_medida"));
                        }
                        CallableStatement insert = cc.prepareCall("{call insertarInsumo(?,?)}");
                        insert.setString(1, nombre);
                        insert.setInt(2,idtipomed);
                        insert.execute();
                        JOptionPane.showMessageDialog(this,"¬°Insumo agregado exitosamente!","Mensajes", JOptionPane.INFORMATION_MESSAGE);
                        txtNombre.setText("");
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Problemas de conexi√≥n con la Base de Datos",
                            "Mensajes", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(this, "El Insumo ya existe","Mensajes", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        mostrarTabla();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int i = JOptionPane.showConfirmDialog(this,"¬øEst√° seguro de que desea eliminar este Insumo?","Mensajes", JOptionPane.ERROR_MESSAGE);
        if (i == 0){
            int fila = tblInsumos.getSelectedRow();
            String valor = tblInsumos.getValueAt(fila, 0).toString();
            try {
                CallableStatement delete = cc.prepareCall("{call eliminarInsumo(?)}");
                delete.setString(1, valor);
                delete.execute();
                JOptionPane.showMessageDialog(this,"¬°Insumo eliminado exitosamente!","Mensajes", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Problemas de conexi√≥n con la Base de Datos",
                    "Mensajes", JOptionPane.ERROR_MESSAGE);
            }
        }
        mostrarTabla();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        int key = evt.getKeyChar();

        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;

         if (!(minusculas || mayusculas || espacio))
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        String nombre;
        String descripcion;
        int idtipo = 0;
        PreparedStatement ps = null;
        ResultSet rs = null;
        String sql = "";
        sql = "select id_tipo_medida from tipo_medida where descripcion = ?;";
        int i = JOptionPane.showConfirmDialog(this,"¬øEst√° seguro de que desea modificar este Insumo?","Mensajes", JOptionPane.ERROR_MESSAGE);
        if (i == 0){
            int fila = tblInsumos.getSelectedRow();
            String valor = tblInsumos.getValueAt(fila, 0).toString();
            nombre = tblInsumos.getValueAt(fila, 1).toString();
            descripcion = tblInsumos.getValueAt(fila, 3).toString();
            try {
                ps = cc.prepareStatement(sql);
                ps.setString(1, descripcion);
                rs = ps.executeQuery();
                if (rs.next()){
                    idtipo = Integer.parseInt(rs.getString("id_tipo_medida"));
                }
                CallableStatement modificar = cc.prepareCall("{call actualizarInsumo(?,?,?)}");
                modificar.setString(1, valor);
                modificar.setString(2, nombre);
                modificar.setInt(3, idtipo);
                modificar.execute();
                JOptionPane.showMessageDialog(this,"¬°Insumo modificado exitosamente!","Mensajes", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Problemas de conexi√≥n con la Base de Datos",
                    "Mensajes", JOptionPane.ERROR_MESSAGE);
            }
        }
        mostrarTabla();
    }//GEN-LAST:event_btnModificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista_Mantener_Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista_Mantener_Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista_Mantener_Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista_Mantener_Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista_Mantener_Inventario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cmbMedida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblInsumos;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
